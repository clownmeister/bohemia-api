<?xml version="1.0"?>
<ruleset name="ClownMeister sqa">
    <!--  Usable sniffs here https://packagist.org/packages/slevomat/coding-standard  -->
    <!-- display progress -->
    <arg value="p"/>
    <!-- use colors in output -->
    <arg name="colors"/>
    <!--  Inherit from  -->
    <rule ref="PSR12"/>
    <!-- Paths to check -->
    <file>src</file>
    <file>tests</file>

    <!--  Include slevomat ruleset  -->
    <rule ref="./vendor/slevomat/coding-standard/SlevomatCodingStandard/ruleset.xml"/>


    <!--  Exclusions  -->
    <rule ref="SlevomatCodingStandard">
        <!--    User any namespace    -->
        <exclude name="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces"/>

        <!--    Also bullshit    -->
        <exclude name="SlevomatCodingStandard.Files.TypeNameMatchesFileName"/>

        <!--    Also doesn't look nice    -->
        <exclude name="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces"/>

        <!--    This is what php8 is about    -->
        <exclude name="SlevomatCodingStandard.Classes.DisallowConstructorPropertyPromotion"/>

        <!--    Again why would we use php 8 otherwise o.O ?    -->
        <exclude name="SlevomatCodingStandard.Functions.DisallowNamedArguments"/>

        <!--    Nope    -->
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>
        <exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly"/>

        <!--    Results in one line conditions    -->
        <exclude name="SlevomatCodingStandard.PHP.UselessParentheses"/>

        <exclude name="SlevomatCodingStandard.ControlStructures.NewWithoutParentheses"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.RequireYodaComparison"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousErrorNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousTraitNaming"/>
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLineDocComment"/>
        <exclude name="SlevomatCodingStandard.Numbers.RequireNumericLiteralSeparator"/>
    </rule>

    <!--  Require property promotion php8  -->
    <rule ref="SlevomatCodingStandard.Classes.RequireConstructorPropertyPromotion"/>

    <!--  Disallows leading backslash in use statement  -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>

    <!--  Require description for @deprecated annotation  -->
    <rule ref="SlevomatCodingStandard.Commenting.DeprecatedAnnotationDeclaration"/>

    <!--  Require "new" statements with parentheses  -->
    <rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses"/>

    <!--  https://knowthecode.io/yoda-conditions-yoda-not-yoda  -->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>

    <!--  Check for type uses. Also in comments  -->
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>

    <!--  Require functional comments only  -->
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamComment"/>

    <!--  Short array syntax only  -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!--  allow native type hints  -->
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <properties>
            <property name="enableObjectTypeHint" value="true"/>
        </properties>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
        <properties>
            <property name="enableNativeTypeHint" value="true"/>
        </properties>
    </rule>
</ruleset>
